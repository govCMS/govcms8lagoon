ARG LAGOON_IMAGE_VERSION
ARG PHP_IMAGE_VERSION

FROM amazeeio/php:${PHP_IMAGE_VERSION}-cli-drupal-${LAGOON_IMAGE_VERSION} as builder

ARG GOVCMS_PROJECT_VERSION
ARG DRUPAL_CORE_VERSION
ARG COMPOSER_AUTH
ARG GITHUB_TOKEN

COPY composer.* /app/

# Copy base file for extensible saas.
COPY custom /app/custom

# Install yq for YAML parsing.
RUN wget -O /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/2.4.0/yq_linux_amd64" \
  && chmod +x /usr/local/bin/yq

# Install jq for JSON parsing.
RUN wget -O /usr/local/bin/jq "https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64" \
  && chmod +x /usr/local/bin/jq

RUN sed -i -e "/govcms\/govcms/ s!\^1.0!${GOVCMS_PROJECT_VERSION}!" /app/composer.json \
    && sed -i -e "/drupal\/core-recommended/ s!\^8.8!${DRUPAL_CORE_VERSION}!" /app/composer.json

COPY scripts/composer/ScriptHandler.php /app/scripts/composer/ScriptHandler.php

ENV COMPOSER_MEMORY_LIMIT=-1
# Set the Github OAuth token only when the variable is set.
RUN [[ ! -z "${GITHUB_TOKEN}" ]]  && composer config -g github-oauth.github.com ${GITHUB_TOKEN} || echo "Personal Github OAuth token is not set."
RUN composer install -d /app \
    && composer clearcache

COPY .docker/sanitize.sh /app/sanitize.sh

COPY .docker/images/govcms8/scripts /usr/bin/
RUN chmod 755 /usr/bin/govcms-deploy
COPY .docker/images/govcms8/govcms.site.yml /app/drush/sites/

# Ensure MySQL client can accept server max_allowed_packet
COPY .docker/images/govcms8/mariadb-client.cnf /etc/my.cnf.d

RUN mkdir -p /app/web/sites/default/files/private \
    && fix-permissions /home/.drush \
    && fix-permissions /app/drush/sites \
    && fix-permissions /etc/my.cnf.d \
    && chmod +x /app/sanitize.sh \
    && /app/sanitize.sh \
    && rm -f /app/sanitize.sh

COPY modules/ /app/web/sites/all/modules/

COPY .docker/images/govcms8/settings/ /app/web/sites/default/
RUN chmod 444 /app/web/sites/default/settings.php

# Sanitize as an entrypoint to ensure that potentially vulnerable
# files are removed when the container is started.
COPY .docker/sanitize.sh /lagoon/entrypoints/20-sanitize.sh
RUN chmod +x /lagoon/entrypoints/20-sanitize.sh

# Define where the Drupal Root is located
ENV WEBROOT=web
