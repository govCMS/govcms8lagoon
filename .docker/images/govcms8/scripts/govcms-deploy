#!/usr/bin/env bash
##
# GovCMS 8 Drupal deployment script.
#

# Having this set to TRUE, which can be done as a runtime variable against a
# project environment, implies that we use this environment to test a site against
# changes like future versions of govcms images. In this scenario the database
# will be synced from PROD, ignoring any local database state.
# @todo this variable will get a new name, since it is part of a bigger piece of work around types of environments.
GOVCMS_TEST_CANARY=${GOVCMS_TEST_CANARY:-FALSE}

# Ensure placeholders are replaced in Drush9 alias file.
sed -i "s/%%PROJECT_NAME%%/$LAGOON_PROJECT/g" /app/drush/sites/govcms.site.yml

# Ensure tmp folder always exists.
mkdir -p /app/web/sites/default/files/private/tmp/

# Check for presence of config files.
config_count=`ls -1 /app/config/default/*.yml 2>/dev/null | wc -l`
dev_config_count=`ls -1 /app/config/dev/*.yml 2>/dev/null | wc -l`

# Database options to configure the remote to use the read replica when
# performing read operations.
dump_opts=""
read_replica_enabled () {
  if [[ -z "$MARIADB_READREPLICA_HOSTS" ]]; then
    return
  fi

  if tables=$(drush sqlq 'show tables;' --database=read 2> /dev/null) && [ -n "$tables" ]; then
    echo "Replica is available, using for database operations."
    dump_opts="--database=read"
  fi
}

# Database updates, cache rebuild, optional config imports.
common_deploy () {
  drush updb -y
  drush cr

  # Base configuration import with development environment overrides.
  if [ "$config_count" -gt 0 ]; then
    if [[ ! -z "$LAGOON_ENVIRONMENT_TYPE" && "$LAGOON_ENVIRONMENT_TYPE" != "production" && "$dev_config_count" -gt 0 ]]; then
      drush cim -y dev --partial
    fi
  fi

  if [[ ! -z "$LAGOON_ENVIRONMENT_TYPE" && "$LAGOON_ENVIRONMENT_TYPE" != "production" ]]; then
    # Enable stage file proxy post db-import.
    drush en stage_file_proxy -y
  fi
}

# Non production environments.
if [[ "$LAGOON_ENVIRONMENT_TYPE" != "production" ]]; then
    if ! drush status --fields=bootstrap | grep -q "Successful"; then
        # Import prod db in Lagoon development environments.
        if [[ ! -z "$LAGOON_ENVIRONMENT_TYPE" && "$LAGOON_ENVIRONMENT_TYPE" != "local" ]]; then
          drush sql-drop -y
          drush sql-sync @govcms.prod @self -y
          common_deploy
        else
          echo "Drupal not installed."
        fi
    else
      # @see comments for GOVCMS_TEST_CANARY above.
      if [[ "$GOVCMS_TEST_CANARY" = TRUE ]]; then
        echo "GOVCMS_TEST_CANARY is set, syncing the database."
        drush sql-drop -y
        drush sql-sync @govcms.prod @self -y
      fi
      common_deploy
    fi
# Production environments.
else
  if drush status --fields=bootstrap | grep -q "Successful"; then
    read_replica_enabled $dump_opts

    mkdir -p /app/web/sites/default/files/private/backups/ && drush sql-dump --gzip --result-file=/app/web/sites/default/files/private/backups/pre-deploy-dump.sql $dump_opts
    drush config-export sync -y --destination /app/web/sites/default/files/private/backups/config && tar -czf /app/web/sites/default/files/private/backups/config.tar.gz -C /app/web/sites/default/files/private/backups/config . && rm -rf /app/web/sites/default/files/private/backups/config
    common_deploy
    drush en -y govcms_lagoon && drush pmu -y govcms_lagoon;
  else
    echo "Drupal not installed."
  fi
fi
